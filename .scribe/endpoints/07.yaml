name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'GET (GET api/users)'
      description: 'Retrieves all users paginated in chunks of 15'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number to retrieve.'
        required: false
        example: 1
        type: integer
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
              {
                   "id": 1,
                   "name": "John Doe",
                   "email": "admin@admin.com",
                   "phone": "08012345678",
                   "image": "https://via.placeholder.com/150",
               }
           ],
           "meta": {
               "current_page": 1,
               "from": 1,
               "last_page": 1,
                "path": "http://localhost:8000/api/users",
                "per_page": 15,
                "to": 1,
                "total": 1
            },
            "status": "success",
            "message": "Resource retrieved successfully",
            "statusCode": 200
          }
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'GET /api/users/{id}'
      description: 'Display the specified user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
              "id": 1,
              "name": "Admin",
              "email": "admin@admin.com",
              "phone": "08012345678",
              "image": "https://via.placeholder.com/150",
              },
              "status": "success",
              "message": "Resource retrieved successfully",
              "statusCode": 200
          }
        headers: []
        description: '200, success'
      -
        status: 404
        content: |-
          {
          "status": "error",
          "message": "Resource not found",
          "statusCode": 404
          }
        headers: []
        description: '404, not found'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'PUT /api/users/{id}'
      description: 'Update the specified user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: false
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: johndoe@mail.com
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the user.'
        required: false
        example: '08012345678'
        type: string
        custom: []
      image:
        name: image
        description: 'The image of the user.'
        required: false
        example: 'https://res.cloudinary.com/duqkqzjxk/image/upload/v1590000000/avatars/1.jpg'
        type: string
        custom: []
      role:
        name: role
        description: 'The role of the user.'
        required: false
        example: member
        type: string
        custom: []
      additionalInfo:
        name: additionalInfo
        description: 'The additional information of the user.'
        required: false
        example:
          regNo: '123456'
          areaOfInterest: 'Software Engineering'
          university: 'University of Lagos'
          college: 'College of Engineering'
          department: 'Department of Computer Science'
          degreeProgramme: 'B.Sc. Computer Science'
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'DELETE /api/users/{id}'
      description: |-
        Delete a user from the database completely and all its relations

        <aside class="notice"> <strong>NOTE:</strong> This action is irreversible </aside>
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'POST api/users'
      description: 'Creates a new user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Token'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of user'
        required: true
        example: doloremque
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user, should be valid email, unique to the users table'
        required: true
        example: qui
        type: string
        custom: []
      phone:
        name: phone
        description: 'Phone number of the user, unique to the users table'
        required: false
        example: saepe
        type: string
        custom: []
      image:
        name: image
        description: 'Image of the user, should be a valid url'
        required: false
        example: deleniti
        type: string
        custom: []
      role:
        name: role
        description: 'Role of the user, should be either "member", "leader", "developer" or "admin"'
        required: false
        example: necessitatibus
        type: string
        custom: []
      additionalInfo:
        name: additionalInfo
        description: |-
          Additional information of the user, should be an object with the following keys:
          - position: string, required if role is "leader"
          - university: string, required if role is "member"
          - college: string, required if role is "member"
          - department: string, required if role is "member"
          - degreeProgramme: string, required if role is "member"
        required: false
        example: []
        type: object
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
                "id": 1,
                "name": "John Doe",
                "email": "johndoe@mail.com",
                "phone": "08012345678",
                "image": "https://via.placeholder.com/150",
                "role": "member",
                "regNo": "2020-04-09890",
                "isProjectOwner": 0,
                "areaOfInterest": "Software Development",
                "initialAreaOfInterest": "Software Development - 2020",
                "university": "University of Lagos",
                "college": "College of Medicine",
                "department": "Department of Surgery",
                "degreeProgramme": "MBBS"
            },
            "status": "success",
            "message": "Resource created successfully",
            "statusCode": 200
            }
        headers: []
        description: '200, member'
      -
        status: 200
        content: |-
          {
            "data": {
                "id": 1,
                "name": "John Doe",
                "email": "johndoe@mail.com",
                "phone": "08012345678",
                "image": "https://via.placeholder.com/150",
                "role": "leader",
                "isProjectOwner": 0,
                "position": "President"
            },
            "status": "success",
            "message": "Resource created successfully",
            "statusCode": 200
            }
        headers: []
        description: '200, leader'
    responseFields: []
